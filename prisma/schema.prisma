// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model kelasTb {
  id        Int    @id @default(autoincrement())
  nama      String
  guruId    Int @unique
  tahunajaran  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  kelassiswaTb kelassiswaTb[]
  guruTb  guruTb  @relation(fields: [guruId], references: [id], onDelete: Cascade)
}

model siswaTb {
  id           Int      @id @default(autoincrement())
  nisn         String
  nama         String
  jurusan      String
  jenisKelamin String
  agama        String
  tempatLahir  String
  tanggalLahir DateTime
  alamat       String
  hp           String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  kelassiswaTb kelassiswaTb[]
}

model kelassiswaTb {
  id          Int    @id @default(autoincrement())
  kelasId     Int
  siswaId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  kelasTb kelasTb @relation(fields: [kelasId], references: [id], onDelete: Cascade)
  siswaTb siswaTb @relation(fields: [siswaId], references: [id], onDelete: Cascade)
}

model guruTb {
  id            Int      @id @default(autoincrement())
  nip           String
  nama          String
  mataPelajaran String
  hp            String
  tempatLahir   String
  tanggalLahir  DateTime
  alamat        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  kelasTb   kelasTb?
  
}

model mataPelajaranTb {
  id        Int    @id @default(autoincrement())
  nama      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}